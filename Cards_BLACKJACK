from tkinter import *
from tkinter import ttk
import random

global player_pass
player_pass = False

global labels_player
labels_player = []
global logos_player
logos_player = []
global labels_bank
labels_bank = []
global logos_bank
logos_bank = []
print


def deck():
    """
    Returns a list of strings representing a deck of playing cards, in the format 'suit # rank'
    """
    stack = []
    for i in ['Clubs # ', 'Diam. # ', 'Hearts # ', 'Spades # ']:
        for j in ['2', '3', '4', '5', '6', '7', '8', '9', '10', 'Jack', 'Queen', 'King', 'Ace']:
            stack.append(i + j)

    return(stack)


def player_pass_button(value):
    """
    Sets the global variable player_pass to True if value is 'True', otherwise does nothing.
    """
    global player_pass
    global turn
    if value == 'True':
        player_pass = True


def bank_face(master, bank_stack):
    """
    Updates the labels and images for the bank's cards, using the given master and bank_stack.
    """
    global labels_bank
    global logos_bank
    logos_bank = []
    for i in range(len(bank_stack)):
        #labels_bank.append(Label(master, text='Face \ndown!', font=('Arial', 14)))
        #labels_bank[i].place(relx=(2 + i) / 10, rely=0.05, width=130, height=180)
        logos_bank.append(PhotoImage(file=r'D:/PROJECTS/Sublime Text 3/cards/%s.gif' % bank_stack[i]).subsample(1, 1))
        labels_bank[i].config(image=logos_bank[i])

    #Label(master, text=(edit[0] + '\n' * 3 + edit[1]), font=('Arial', 14)).place(relx=(2 + i) / 10, rely=0.05, width=70, height=150)


def game_over(master, player_win, bank_win, player_score, bank_score):
    """
    Displays a message indicating the winner of the game on the given master, based on the given player_win and bank_win booleans and player_score and bank_score integers.
    """
    if player_score > bank_score or player_win == True:
        Label(master, text='YOU WIN!', font=('Arial', 18)).place(relx=0.3, rely=0.4, width=400, height=100)
    elif bank_score > player_score or bank_win == True:
        Label(master, text='BANK WINS!', font=('Arial', 18)).place(relx=0.3, rely=0.4, width=400, height=100)


def new_game(master):
    """
    Begins a new game on the given master.
    """
    pass


def play(master, stack):
    """
    Begins a game of Blackjack on the given master, using the given stack of cards.
    """
    global player_pass
    global labels_player
    global logos_player
    global labels_bank
    global logos_bank
    player_win = False
    bank_win = False
    bank_pass = False
    player_stack = []
    bank_stack = []
    player_score = 0
    bank_score = 0

    waiting = IntVar()
    pass_var = StringVar()
    button_play = Button(master, text='Play', command=lambda: waiting.set(1))
    button_play.place(relx=0.01, rely=0.95, width=90)

    button_pass = Button(master, text='Pass', command=lambda: player_pass_button('True'))
    button_pass.place(relx=0.15, rely=0.95)

    button_game = Button(master, text='Game over', command=lambda: game_over(master, player_win, bank_win, player_score, bank_score))
    button_game.place(relx=0.9, rely=0.95)
    turn = 0
    dealer_ace = False

    while player_win == False and bank_win == False:
        turn += 1
        if turn % 2 != 0:
            button_play.wait_variable(waiting)
            if player_pass == False:


                label_player = Label(master, text='player')
                label_player.place(relx=0.88, rely=0.7, width=70, height=150)
                card = random.choice(stack)
                player_stack.append(card)

                for i in range(len(player_stack)):
                    edit = player_stack[i]
                    edit = edit.split(' # ')
                    labels_player.append(Label(master, text=(edit[0] + '\n' * 3 + edit[1]), font=('Arial', 14)))
                    labels_player[i].place(relx=(2 + i) / 10, rely=0.6, width=130, height=180)
                    logos_player.append(PhotoImage(file=r'D:\PROJECTS\Sublime Text 3\cards\%s.gif' % card).subsample(1, 1))
                    labels_player[i].config(image=logos_player[i])

                card = card.split(' # ')
                card = card[1]
                if card == '2' or card == '3' or card == '4' or card == '5' or card == '6' or card == '7' or card == '8' or card == '9' or card == '10':
                    card = eval(card)
                    player_score = player_score + card
                elif card == 'Jack' or card == 'Queen' or card == 'King' or card == 'Ace':
                    player_score = player_score + 10
                label_player.config(text=('Your score is\n' + str(player_score)))
                if player_score == 21:
                    bank_face(master, bank_stack)
                    Label(master, text='You Win!', font=('Arial', 18)).place(relx=0.3, rely=0.4, width=400, height=100)
                    label_bank.config(text=('bank score is\n' + str(bank_score)))
                    player_win = True
                elif player_score > 21:
                    bank_face(master, bank_stack)
                    Label(master, text='You went over! Bank WIN!', font=('Arial', 18)).place(relx=0.3, rely=0.4, width=400, height=100)
                    label_bank.config(text=('bank score is\n' + str(bank_score)))
                    bank_win = True

        elif turn % 2 == 0:
            if player_pass == True:
                button_play.config(text='Banks Turn')

            label_bank = Label(master, text='bank')
            label_bank.place(relx=0.88, rely=0.05, width=70, height=150)

            if bank_score <= 17:
                card = random.choice(stack)
                bank_stack.append(card)

                for i in range(len(bank_stack)):
                    edit = bank_stack[i]
                    edit = edit.split(' # ')
                    labels_bank.append(Label(master, text='Face \ndown!', font=('Arial', 14)))
                    labels_bank[i].place(relx=(2 + i) / 10, rely=0.05, width=130, height=180)
                    logos_bank.append(PhotoImage(file=r'D:\PROJECTS\Sublime Text 3\cards\downface.gif').subsample(1, 1))
                    labels_bank[i].config(image=logos_bank[i])

                    #Label(master, text='Face \ndown!', font=('Arial', 14)).place(relx=(2 + i) / 10, rely=0.05, width=70, height=150)

                card = card.split(' # ')
                card = card[1]
                if card == '2' or card == '3' or card == '4' or card == '5' or card == '6' or card == '7' or card == '8' or card == '9' or card == '10':
                    card = eval(card)
                    bank_score = bank_score + card
                elif card == 'Jack' or card == 'Queen' or card == 'King':
                    bank_score = bank_score + 10
                elif card == 'Ace':
                    bank_score = bank_score + 1
            if bank_score > 17:
                Label(master, text='bank Pass!', font=('Arial', 18)).place(relx=0.3, rely=0.4, width=400, height=100)
                bank_pass = True
                if bank_score == 21:
                    bank_face(master, bank_stack)
                    Label(master, text='bank Wins!', font=('Arial', 18)).place(relx=0.3, rely=0.4, width=400, height=100)
                    label_bank.config(text=('bank score is\n' + str(bank_score)))
                    bank_win = True
                elif bank_score > 17 and bank_score <= 21:
                    if card == 'Ace':
                        bank_score = bank_score + 11
                elif bank_score > 21:
                    bank_face(master, bank_stack)
                    Label(master, text='bank went over! You WIN!', font=('Arial', 18)).place(relx=0.3, rely=0.4, width=400, height=100)
                    label_bank.config(text=('bank score is\n' + str(bank_score)))
                    player_win = True

        if player_pass == True and bank_pass == True:
            bank_face(master, bank_stack)
            label_bank.config(text=('bank score is\n' + str(bank_score)))
            if player_score > bank_score:
                player_win = True
            elif player_score < bank_score:
                bank_win = True
            break


def main():
    global player_pass
    global labels_player
    global logos_player
    global labels_bank
    global logos_bank
    player_win = False
    bank_win = False
    bank_pass = False
    player_stack = []
    bank_stack = []
    player_score = 0
    bank_score = 0
    root = Tk()
    root.geometry('800x600+400+100')
    root.resizable(False, False)
    root.config(background='aquamarine')
    canvas = Canvas(root)
    canvas.pack(fill=BOTH, expand=True)
    canvas.config(background='aquamarine')

    stack = deck()
    play(canvas, stack)
    canvas_delete = IntVar()
    new_game_button = Button(root, text='New Game?', command=lambda: canvas_delete.set(1))
    new_game_button.place(relx=0.7, rely=0.95, width=100)

    new_game_button.wait_variable(canvas_delete)

    if canvas_delete:
        canvas_delete = IntVar()
        root.destroy()
        player_pass = False
        main()

    root.mainloop()


main()
